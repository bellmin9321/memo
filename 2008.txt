08.03

Emmet(software)

html : ! + tab
div.class : <div class="">
div#id : <div id="
div>ul>li (부모)
div>ul+ol (형제)
div*5
div>ul>li^ol (ul 다음에 ol 넣고 싶으면)
div>(header>ul>li*2>a)+(footer>p) (그룹화)
p(hello) : <p>hello</p>
p.class${item $}*5 (숫자 넣기)
p>lolem (더미용 텍스트 생성)
p>lolem4

-----------------------------------------------------------------
window {DOM(Docume
08.02
API(Application Programming Interfaces)

내부적으로 어떻게 동작하는지, 로직들이 어떻게 짜여 있는지를 몰라도 작동시키면 알아서 돌아가는 도구(?)

예를들어 h1 tag를 쓰면 글자가 커지는 것을 알지만, 이 tag가 내부적으로 어떤 원리로 글자를 크게 만드는지는 모른다. 그 동작방법을 만드는게 바로 API
 
ex) 자판기, 전원코드

{DOM, Network, Audio/Video, Device, File, Storage} APIs

Web APIs Security : 사용자의 권한 요청이나, HTTPs를 요구 할 수 있음

* HTTP(Hypertext Transfer Protocol), HTTPS(Hypertext Transfer Protocol Security)
웹클라이언트와 서버가 어떻게 통신하는지 통신규약을 정해 놓은 것

-----------------------------------------------------------------
window {DOM(Document Object Model)(document...), BOM(Browser Object Model)(navigator, location, fetch, storage), Javascript(Array, Map, Date...)}

window는 기본적으로 global object이기 때문에
console.log(this) > window
console.log(innerwidth) = console.log(window.innerwidth)

이처럼 브라우져에서는 우리가 이용할 수 있는 API를 제공해주게 되고 우리는 그 API를 호출하면서 브라우져에 있는 다양한 기능들을 사용할 수 있음

------------------------------------------------------------------
window.screen : 내 모니터의 해상도 즉 브라우저 바깥에 있는 것까지 다 합한 모니터 사이즈
window.outer : 페이지를 넘어선 브라우저 전체사이즈(브라우저에 있는 탭, url을 합친 전체적인 브라우저의 사이즈)
window.inner : 브라우저 페이지(+ 스크롤바 포함)
documentElement.clientWidth : 스크롤바를 제외한 정말 순수 페이지